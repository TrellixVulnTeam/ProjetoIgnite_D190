{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\DTMONEY\\\\src\\\\hooks\\\\useTransactions.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionsProvider({\n  children\n}) {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get(\"transactions\").then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(transactionInput) {\n    const response = await api.post(\"/transactions\", { ...transactionInput,\n      createdAt: new Date()\n    });\n    const {\n      transaction\n    } = response.data;\n    setTransactions([...transactions, transaction]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\nexport function useTransactions() {\n  _s2();\n\n  const context = useContext(TransactionsContext);\n  return context;\n}\n\n_s2(useTransactions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/DTMONEY/src/hooks/useTransactions.tsx"],"names":["createContext","useContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","transactionInput","post","createdAt","Date","transaction","useTransactions","context"],"mappings":";;;;AAAA,SACEA,aADF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;AAQA,OAAOC,GAAP,MAAgB,iBAAhB;;AA2BA,MAAMC,mBAAmB,gBAAGL,aAAa,CACvC,EADuC,CAAzC;AAIA,OAAO,SAASM,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAuE;AAAA;;AAC5E,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAiB,EAAjB,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CACAM,GADH,CACO,cADP,EAEGC,IAFH,CAESC,QAAD,IAAcH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CAFrC;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeM,iBAAf,CAAiCC,gBAAjC,EAAsE;AACpE,UAAMH,QAAQ,GAAG,MAAMR,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0B,EAC/C,GAAGD,gBAD4C;AAE/CE,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAFoC,KAA1B,CAAvB;AAKA,UAAM;AAAEC,MAAAA;AAAF,QAAkBP,QAAQ,CAACC,IAAjC;AAEAJ,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBW,WAAlB,CAAD,CAAf;AACD;;AAED,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEX,MAAAA,YAAF;AAAgBM,MAAAA;AAAhB,KAArC;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBeD,oB;;KAAAA,oB;AA2BhB,OAAO,SAASc,eAAT,GAA2B;AAAA;;AAChC,QAAMC,OAAO,GAAGpB,UAAU,CAACI,mBAAD,CAA1B;AAEA,SAAOgB,OAAP;AACD;;IAJeD,e","sourcesContent":["import {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nimport api from \"../services/api\";\n\ntype TransactionTypes = \"deposit\" | \"withdraw\";\n\nexport interface ITransaction {\n  id: number;\n  title: string;\n  type: TransactionTypes;\n  category: string;\n  amount: number;\n  createdAt: string;\n}\n\ntype ITransactionInput = Pick<\n  ITransaction,\n  \"title\" | \"type\" | \"amount\" | \"category\"\n>;\n\ninterface TransactionsProviderProps {\n  children: ReactNode;\n}\n\ninterface TransactionsContextData {\n  transactions: ITransaction[];\n  createTransaction: (transaction: ITransactionInput) => Promise<void>;\n}\n\nconst TransactionsContext = createContext<TransactionsContextData>(\n  {} as TransactionsContextData\n);\n\nexport function TransactionsProvider({ children }: TransactionsProviderProps) {\n  const [transactions, setTransactions] = useState<ITransaction[]>([]);\n\n  useEffect(() => {\n    api\n      .get(\"transactions\")\n      .then((response) => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(transactionInput: ITransactionInput) {\n    const response = await api.post(\"/transactions\", {\n      ...transactionInput,\n      createdAt: new Date(),\n    });\n\n    const { transaction } = response.data;\n\n    setTransactions([...transactions, transaction]);\n  }\n\n  return (\n    <TransactionsContext.Provider value={{ transactions, createTransaction }}>\n      {children}\n    </TransactionsContext.Provider>\n  );\n}\n\nexport function useTransactions() {\n  const context = useContext(TransactionsContext);\n\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}