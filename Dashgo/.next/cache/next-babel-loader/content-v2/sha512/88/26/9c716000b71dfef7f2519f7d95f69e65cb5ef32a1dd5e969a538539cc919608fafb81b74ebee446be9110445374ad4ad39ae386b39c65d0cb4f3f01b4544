{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\Projeto 4 - Dashgo\\\\src\\\\components\\\\Form\\\\Input.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { forwardRef } from 'react';\nimport { Input as ChakraInput, FormLabel, FormControl, FormErrorMessage } from '@chakra-ui/react';\n\nconst InputBase = (_ref, ref) => {\n  let {\n    name,\n    label,\n    error = null\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"label\", \"error\"]);\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: [!!label && /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(ChakraInput, _objectSpread({\n      id: name,\n      name: name,\n      ref: ref,\n      focusBorderColor: \"pink.500\",\n      bgColor: \"gray.900\",\n      variant: \"filled\",\n      _hover: {\n        bgColor: 'gray.900'\n      },\n      size: \"lg\"\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), !!error && /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nexport const Input = /*#__PURE__*/forwardRef(InputBase);","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/src/components/Form/Input.tsx"],"names":["forwardRef","Input","ChakraInput","FormLabel","FormControl","FormErrorMessage","InputBase","ref","name","label","error","rest","bgColor","message"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,UAAT,QAAqD,OAArD;AAEA,SAASC,KAAK,IAAIC,WAAlB,EAA+BC,SAA/B,EAA0CC,WAA1C,EAAuFC,gBAAvF,QAA+G,kBAA/G;;AAQA,MAAMC,SAAiE,GACnE,OAAyCC,GAAzC,KAAiD;AAAA,MAAhD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAK,GAAG;AAAvB,GAAgD;AAAA,MAAhBC,IAAgB;;AACnD,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACD,KAA1B;AAAA,eACI,CAAC,CAACD,KAAF,iBAAW,QAAC,SAAD;AAAW,MAAA,OAAO,EAAED,IAApB;AAAA,gBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADf,eAGE,QAAC,WAAD;AACE,MAAA,EAAE,EAAED,IADN;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,GAAG,EAAED,GAHP;AAIE,MAAA,gBAAgB,EAAC,UAJnB;AAKE,MAAA,OAAO,EAAC,UALV;AAME,MAAA,OAAO,EAAC,QANV;AAOE,MAAA,MAAM,EAAE;AACNK,QAAAA,OAAO,EAAE;AADH,OAPV;AAUE,MAAA,IAAI,EAAC;AAVP,OAWMD,IAXN;AAAA;AAAA;AAAA;AAAA,YAHF,EAiBG,CAAC,CAACD,KAAF,iBACC,QAAC,gBAAD;AAAA,gBACGA,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3BD;;AA6BA,OAAO,MAAMZ,KAAK,gBAAGD,UAAU,CAACM,SAAD,CAAxB","sourcesContent":["import { forwardRef, ForwardRefRenderFunction } from 'react'\nimport { FieldError } from 'react-hook-form'\nimport { Input as ChakraInput, FormLabel, FormControl, InputProps as ChakraInputProps, FormErrorMessage } from '@chakra-ui/react'\n\ninterface InputProps extends ChakraInputProps {\n  name: string;\n  label?: string;\n  error?: FieldError;\n}\n\nconst InputBase: ForwardRefRenderFunction<HTMLInputElement, InputProps> \n  = ({ name, label, error = null, ...rest }, ref) => {\n  return (\n    <FormControl isInvalid={!!error}>\n      { !!label && <FormLabel htmlFor={name}>{label}</FormLabel>}\n\n      <ChakraInput \n        id={name} \n        name={name}\n        ref={ref}\n        focusBorderColor='pink.500'\n        bgColor='gray.900'\n        variant='filled'\n        _hover={{\n          bgColor: 'gray.900'\n        }}\n        size='lg'\n        {...rest}\n      />\n\n      {!!error && (\n        <FormErrorMessage>\n          {error.message}\n        </FormErrorMessage>\n      )}\n    </FormControl>\n  )\n}\n\nexport const Input = forwardRef(InputBase)\n"]},"metadata":{},"sourceType":"module"}