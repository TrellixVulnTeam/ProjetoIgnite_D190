{"ast":null,"code":"import _defineProperty from \"C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\Projeto 4 - Dashgo\\\\src\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { theme } from '../styles/theme';\nimport { SidebarDrawerProvider } from '../contexts/SidebarDrawerContext';\nimport { makeServer } from '../services/mirage';\nimport { queryClient } from '../services/queryClient';\n\nif (true) {\n  makeServer();\n}\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: [/*#__PURE__*/_jsxDEV(ChakraProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(SidebarDrawerProvider, {\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQueryDevtools, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/src/pages/_app.tsx"],"names":["ChakraProvider","QueryClientProvider","ReactQueryDevtools","theme","SidebarDrawerProvider","makeServer","queryClient","MyApp","Component","pageProps"],"mappings":";;;;;;;;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,mBAAT,QAAoC,aAApC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AAEA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,SAASC,qBAAT,QAAsC,kCAAtC;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,UAA2C;AACzCD,EAAAA,UAAU;AACX;;AAED,SAASE,KAAT,OAAmD;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AACjD,sBACE,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEH,WAA7B;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEH,KAAvB;AAAA,6BACE,QAAC,qBAAD;AAAA,+BACE,QAAC,SAAD,oBAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQF,K;AAcT,eAAeA,KAAf","sourcesContent":["import { AppProps } from 'next/app'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport { QueryClientProvider } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nimport { theme } from '../styles/theme'\n\nimport { SidebarDrawerProvider } from '../contexts/SidebarDrawerContext'\n\nimport { makeServer } from '../services/mirage'\nimport { queryClient } from '../services/queryClient'\n\nif(process.env.NODE_ENV === 'development') {\n  makeServer();\n}\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ChakraProvider theme={theme}>\n        <SidebarDrawerProvider>\n          <Component {...pageProps} />\n        </SidebarDrawerProvider>\n      </ChakraProvider>\n\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  )\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}