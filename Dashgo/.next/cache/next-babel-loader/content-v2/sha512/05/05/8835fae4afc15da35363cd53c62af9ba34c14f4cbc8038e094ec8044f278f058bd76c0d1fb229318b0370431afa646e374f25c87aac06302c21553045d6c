{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\Projeto 4 - Dashgo\\\\src\\\\contexts\\\\SidebarDrawerContext.tsx\";\nimport { createContext, useContext, useEffect } from 'react';\nimport { useDisclosure } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nconst SidebarDrawerContext = /*#__PURE__*/createContext({});\nexport function SidebarDrawerProvider({\n  children\n}) {\n  const disclosure = useDisclosure();\n  const router = useRouter();\n  useEffect(() => {\n    disclosure.onClose();\n  }, [router.asPath]);\n  return /*#__PURE__*/_jsxDEV(SidebarDrawerContext.Provider, {\n    value: disclosure,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\nexport const useSidebarDrawer = () => useContext(SidebarDrawerContext);","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/src/contexts/SidebarDrawerContext.tsx"],"names":["createContext","useContext","useEffect","useDisclosure","useRouter","SidebarDrawerContext","SidebarDrawerProvider","children","disclosure","router","onClose","asPath","useSidebarDrawer"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,UAAnC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,SAASC,aAAT,QAAmD,kBAAnD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAQA,MAAMC,oBAAoB,gBAAGL,aAAa,CAAC,EAAD,CAA1C;AAEA,OAAO,SAASM,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAAyE;AAC9E,QAAMC,UAAU,GAAGL,aAAa,EAAhC;AACA,QAAMM,MAAM,GAAGL,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,UAAU,CAACE,OAAX;AACD,GAFQ,EAEN,CAACD,MAAM,CAACE,MAAR,CAFM,CAAT;AAIA,sBACE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEH,UAAtC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,OAAO,MAAMK,gBAAgB,GAAG,MAAMX,UAAU,CAACI,oBAAD,CAAzC","sourcesContent":["import { createContext, ReactNode, useContext, useEffect } from 'react'\nimport { useDisclosure, UseDisclosureReturn } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\n\ninterface SidebarDrawerProviderProps {\n  children: ReactNode;\n}\n\ntype SidebarDrawerContextData = UseDisclosureReturn;\n\nconst SidebarDrawerContext = createContext({} as SidebarDrawerContextData);\n\nexport function SidebarDrawerProvider({ children }: SidebarDrawerProviderProps) {\n  const disclosure = useDisclosure()\n  const router = useRouter()\n\n  useEffect(() => {\n    disclosure.onClose()\n  }, [router.asPath])\n\n  return (\n    <SidebarDrawerContext.Provider value={disclosure}>\n      {children}\n    </SidebarDrawerContext.Provider>\n  )\n}\n\nexport const useSidebarDrawer = () => useContext(SidebarDrawerContext);"]},"metadata":{},"sourceType":"module"}