{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\Projeto 4 - Dashgo\\\\src\\\\components\\\\Pagination\\\\index.tsx\";\nimport { Box, Stack, Text } from '@chakra-ui/react';\nimport { PaginationItem } from './PaginationItem';\nconst siblingsCount = 1;\n\nfunction generatePagesArray(from, to) {\n  return [...new Array(to - from)].map((_, index) => {\n    return from + index + 1;\n  }).filter(page => page > 0);\n}\n\nexport function Pagination({\n  totalCountOfRegisters,\n  registerPerPage = 10,\n  currentPage = 1,\n  onPageChange\n}) {\n  const lastPage = Math.floor(totalCountOfRegisters / registerPerPage);\n  const previousPages = currentPage > 1 ? generatePagesArray(currentPage - 1 - siblingsCount, currentPage - 1) : [];\n  const nextPages = currentPage < lastPage ? generatePagesArray(currentPage, Math.min(currentPage + siblingsCount, lastPage)) : [];\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: ['column', 'row'],\n    mt: \"8\",\n    justify: \"space-between\",\n    align: \"center\",\n    spacing: \"6\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), \" - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 30\n      }, this), \" de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: \"2\",\n      children: [currentPage > 1 + siblingsCount && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n          onPageChange: onPageChange,\n          number: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), currentPage > 2 + siblingsCount && /*#__PURE__*/_jsxDEV(Text, {\n          color: \"gray.300\",\n          w: \"8\",\n          textAlign: \"center\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), previousPages.length > 0 && previousPages.map(page => {\n        return /*#__PURE__*/_jsxDEV(PaginationItem, {\n          onPageChange: onPageChange,\n          number: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(PaginationItem, {\n        onPageChange: onPageChange,\n        number: currentPage,\n        isCurrent: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), nextPages.length > 0 && nextPages.map(page => {\n        return /*#__PURE__*/_jsxDEV(PaginationItem, {\n          onPageChange: onPageChange,\n          number: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 18\n        }, this);\n      }), currentPage + siblingsCount < lastPage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [currentPage + 1 + siblingsCount < lastPage && /*#__PURE__*/_jsxDEV(Text, {\n          color: \"gray.300\",\n          w: \"8\",\n          textAlign: \"center\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(PaginationItem, {\n          onPageChange: onPageChange,\n          number: lastPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/src/components/Pagination/index.tsx"],"names":["Box","Stack","Text","PaginationItem","siblingsCount","generatePagesArray","from","to","Array","map","_","index","filter","page","Pagination","totalCountOfRegisters","registerPerPage","currentPage","onPageChange","lastPage","Math","floor","previousPages","nextPages","min","length"],"mappings":"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","sourcesContent":["import { Box, Stack, Text } from '@chakra-ui/react'\n\nimport { PaginationItem } from './PaginationItem'\n\ninterface PaginationProps {\n  totalCountOfRegisters: number;\n  registerPerPage?: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n}\n\nconst siblingsCount = 1\n\nfunction generatePagesArray(from: number, to: number) {\n  return [...new Array(to - from)].map((_, index) => {\n    return from + index + 1\n  }).filter(page => page > 0)\n}\n\nexport function Pagination({ \n  totalCountOfRegisters, \n  registerPerPage = 10, \n  currentPage = 1, \n  onPageChange\n}: PaginationProps) {\n  const lastPage = Math.floor(totalCountOfRegisters / registerPerPage)\n\n  const previousPages = currentPage > 1 \n    ? generatePagesArray(currentPage - 1 - siblingsCount, currentPage - 1)\n    : []\n\n  const nextPages = currentPage < lastPage \n    ? generatePagesArray(currentPage, Math.min(currentPage + siblingsCount, lastPage))\n    : []\n\n  return (\n    <Stack\n      direction={['column', 'row']}\n      mt='8'\n      justify='space-between'\n      align='center'\n      spacing='6'\n    >\n      <Box>\n        <strong>0</strong> - <strong>10</strong> de <strong>100</strong>\n      </Box>\n      <Stack direction='row' spacing='2'>\n        {currentPage > (1 + siblingsCount) && (\n          <>\n            <PaginationItem onPageChange={onPageChange} number={1}/>\n            {currentPage > (2 + siblingsCount) && (\n              <Text color='gray.300' w='8' textAlign='center'>...</Text>\n            )}\n          </>\n        )}\n\n        {previousPages.length > 0 && previousPages.map(page => {\n          return <PaginationItem onPageChange={onPageChange} key={page} number={page}/>\n        })}\n\n        <PaginationItem onPageChange={onPageChange} number={currentPage} isCurrent/>\n\n        {nextPages.length > 0 && nextPages.map(page => {\n          return <PaginationItem onPageChange={onPageChange} key={page} number={page}/>\n        })}\n\n        {(currentPage + siblingsCount) < lastPage && (\n          <>\n            {(currentPage + 1 + siblingsCount) < lastPage && (\n              <Text color='gray.300' w='8' textAlign='center'>...</Text>\n            )}\n            <PaginationItem onPageChange={onPageChange} number={lastPage}/>\n          </>\n        )}\n      </Stack>\n    </Stack>\n  )\n}"]},"metadata":{},"sourceType":"module"}