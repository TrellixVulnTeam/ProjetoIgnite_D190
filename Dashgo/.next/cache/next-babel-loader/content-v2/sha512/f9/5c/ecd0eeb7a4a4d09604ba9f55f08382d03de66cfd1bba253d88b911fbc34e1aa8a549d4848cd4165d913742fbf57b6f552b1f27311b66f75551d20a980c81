{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\Projeto 4 - Dashgo\\\\src\\\\components\\\\ActiveLink.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { cloneElement } from 'react';\nexport function ActiveLink(_ref) {\n  let {\n    children,\n    shouldMatchExactHref = false\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"shouldMatchExactHref\"]);\n\n  const {\n    asPath\n  } = useRouter();\n  let isActive = false;\n\n  if (shouldMatchExactHref && (asPath === rest.href || asPath === rest.as)) {\n    isActive = true;\n  }\n\n  if (!shouldMatchExactHref && (asPath.startsWith(String(rest.href)) || asPath.startsWith(String(rest.as)))) {\n    isActive = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, rest), {}, {\n    children: /*#__PURE__*/cloneElement(children, {\n      color: isActive ? 'pink.400' : 'gray.50'\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/src/components/ActiveLink.tsx"],"names":["Link","useRouter","cloneElement","ActiveLink","children","shouldMatchExactHref","rest","asPath","isActive","href","as","startsWith","String","color"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAgC,WAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAuBC,YAAvB,QAA2C,OAA3C;AAOA,OAAO,SAASC,UAAT,OAAwF;AAAA,MAApE;AAACC,IAAAA,QAAD;AAAWC,IAAAA,oBAAoB,GAAG;AAAlC,GAAoE;AAAA,MAAxBC,IAAwB;;AAC7F,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AAEA,MAAIO,QAAQ,GAAG,KAAf;;AAEA,MAAGH,oBAAoB,KAAKE,MAAM,KAAKD,IAAI,CAACG,IAAhB,IAAwBF,MAAM,KAAKD,IAAI,CAACI,EAA7C,CAAvB,EAAyE;AACvEF,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,MAAG,CAACH,oBAAD,KACAE,MAAM,CAACI,UAAP,CAAkBC,MAAM,CAACN,IAAI,CAACG,IAAN,CAAxB,KACAF,MAAM,CAACI,UAAP,CAAkBC,MAAM,CAACN,IAAI,CAACI,EAAN,CAAxB,CAFA,CAAH,EAEwC;AACtCF,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,sBACE,QAAC,IAAD,kCAAUF,IAAV;AAAA,2BACGJ,YAAY,CAACE,QAAD,EAAW;AACtBS,MAAAA,KAAK,EAAEL,QAAQ,GAAG,UAAH,GAAgB;AADT,KAAX;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import Link, { LinkProps } from 'next/link'\nimport { useRouter } from 'next/router';\nimport { ReactElement, cloneElement } from 'react'\n\ninterface ActiveLinkProps extends LinkProps {\n  children: ReactElement;\n  shouldMatchExactHref?: boolean;\n}\n\nexport function ActiveLink({children, shouldMatchExactHref = false, ...rest}: ActiveLinkProps) {\n  const { asPath } = useRouter()\n\n  let isActive = false\n\n  if(shouldMatchExactHref && (asPath === rest.href || asPath === rest.as)) {\n    isActive = true\n  }\n\n  if(!shouldMatchExactHref && \n    (asPath.startsWith(String(rest.href)) ||\n     asPath.startsWith(String(rest.as)))) {\n    isActive = true\n  }\n  \n  return (\n    <Link {...rest}>\n      {cloneElement(children, {\n        color: isActive ? 'pink.400' : 'gray.50'\n      })}\n    </Link>\n  )\n}"]},"metadata":{},"sourceType":"module"}