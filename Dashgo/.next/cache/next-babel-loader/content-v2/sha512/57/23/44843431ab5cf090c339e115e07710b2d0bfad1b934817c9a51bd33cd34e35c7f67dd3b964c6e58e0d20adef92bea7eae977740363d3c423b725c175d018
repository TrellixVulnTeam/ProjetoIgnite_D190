{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\Projeto 4 - Dashgo\\\\src\\\\pages\\\\users\\\\create.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Button, Divider, Flex, Heading, HStack, SimpleGrid, VStack } from '@chakra-ui/react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useMutation } from 'react-query';\nimport { Header } from '../../components/Header';\nimport { Sidebar } from '../../components/Sidebar';\nimport { Input } from '../../components/Form/Input';\nimport { api } from '../../services/api';\nimport { queryClient } from '../../services/queryClient';\nconst createUserFormSchema = yup.object().shape({\n  name: yup.string().required('Nome obrigatório'),\n  email: yup.string().required('E-mail obrigatório').email('E-mail inválido'),\n  password: yup.string().required('Senha obrigatória').min(6, 'No mínimo 6 caracteres'),\n  password_confirmation: yup.string().oneOf([null, yup.ref('password')], 'As senhas precisam ser iguais')\n});\nexport default function CreateUser() {\n  const router = useRouter();\n  const createUser = useMutation(async user => {\n    const res = await api.post('users', {\n      user: _objectSpread(_objectSpread({}, user), {}, {\n        created_at: new Date()\n      })\n    });\n    return res.data.user;\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('users');\n    }\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isSubmitting\n    }\n  } = useForm({\n    resolver: yupResolver(createUserFormSchema)\n  });\n\n  const handleCreateUser = async values => {\n    await createUser.mutateAsync(values);\n    router.push('/users');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100%\",\n      my: \"6\",\n      maxWidth: 1480,\n      mx: \"auto\",\n      px: \"6\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        as: \"form\",\n        flex: \"1\",\n        borderRadius: 8,\n        bg: \"gray.800\",\n        p: ['6', '8'],\n        onSubmit: handleSubmit(handleCreateUser),\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          fontWeight: \"normal\",\n          children: \"Criar usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          my: \"6\",\n          borderColor: \"gray.700\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: ['6', '8'],\n          children: [/*#__PURE__*/_jsxDEV(SimpleGrid, {\n            minChildWidth: \"240px\",\n            spacing: ['6', '8'],\n            w: \"100%\",\n            children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread({\n              name: \"name\",\n              label: \"Nome completo\",\n              type: \"text\",\n              error: errors.name\n            }, register('name')), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n              name: \"email\",\n              label: \"E-mail\",\n              type: \"email\",\n              error: errors.email\n            }, register('email')), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            minChildWidth: \"240px\",\n            spacing: ['6', '8'],\n            w: \"100%\",\n            children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread({\n              name: \"password\",\n              label: \"Senha\",\n              type: \"password\",\n              error: errors.password\n            }, register('password')), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n              name: \"password_confirmation\",\n              label: \"Confirma\\xE7\\xE3o da senha\",\n              type: \"password\",\n              error: errors.password_confirmation\n            }, register('password_confirmation')), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mt: \"8\",\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: \"/users\",\n              passHref: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                as: \"a\",\n                colorScheme: \"whiteAlpha\",\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              colorScheme: \"pink\",\n              isLoading: isSubmitting,\n              children: \"Salvar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/src/pages/users/create.tsx"],"names":["Box","Button","Divider","Flex","Heading","HStack","SimpleGrid","VStack","Link","useRouter","useForm","yup","yupResolver","useMutation","Header","Sidebar","Input","api","queryClient","createUserFormSchema","object","shape","name","string","required","email","password","min","password_confirmation","oneOf","ref","CreateUser","router","createUser","user","res","post","created_at","Date","data","onSuccess","invalidateQueries","register","handleSubmit","formState","errors","isSubmitting","resolver","handleCreateUser","values","mutateAsync","push"],"mappings":"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","sourcesContent":["import { Box, Button, Divider, Flex, Heading, HStack, SimpleGrid, VStack } from '@chakra-ui/react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { useMutation } from 'react-query'\n\nimport { Header } from '../../components/Header';\nimport { Sidebar } from '../../components/Sidebar';\nimport { Input } from '../../components/Form/Input';\n\nimport { api } from '../../services/api'\nimport { queryClient } from '../../services/queryClient'\n\ntype CreateUserFormData = {\n  name: string;\n  email: string;\n  password: string;\n  password_confirmation: string;\n}\n\nconst createUserFormSchema = yup.object().shape({\n  name: yup.string().required('Nome obrigatório'),\n  email: yup.string().required('E-mail obrigatório').email('E-mail inválido'),\n  password: yup.string().required('Senha obrigatória').min(6, 'No mínimo 6 caracteres'),\n  password_confirmation: yup.string().oneOf([\n    null, yup.ref('password')\n  ], 'As senhas precisam ser iguais')\n})\n\nexport default function CreateUser() {\n  const router = useRouter()\n\n  const createUser = useMutation(async (user: CreateUserFormData) => {\n    const res = await api.post('users', {\n      user: {\n        ...user,\n        created_at: new Date(),\n      }\n    })\n\n    return res.data.user\n  }, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('users')\n    }\n  })\n\n  const { register, handleSubmit, formState: { errors, isSubmitting } } = useForm<CreateUserFormData>({\n    resolver: yupResolver(createUserFormSchema)\n  })\n\n  const handleCreateUser: SubmitHandler<CreateUserFormData> = async (values) => {\n    await createUser.mutateAsync(values)\n\n    router.push('/users')\n  }\n\n  return (\n    <Box>\n       <Header />\n\n      <Flex w='100%' my='6' maxWidth={1480} mx='auto' px='6'>\n        <Sidebar />\n\n        <Box \n          as='form' \n          flex='1' \n          borderRadius={8} \n          bg='gray.800' \n          p={['6', '8']}\n          onSubmit={handleSubmit(handleCreateUser)}\n        >\n          <Heading size='lg' fontWeight='normal'>Criar usuário</Heading>\n\n          <Divider my='6' borderColor='gray.700' />\n\n          <VStack spacing={['6', '8']}>\n            <SimpleGrid \n              minChildWidth='240px'\n              spacing={['6', '8']}\n              w='100%'\n            >\n              <Input \n                name='name' \n                label='Nome completo' \n                type='text'\n                error={errors.name}\n                {...register('name')}\n              />\n              <Input \n                name='email' \n                label='E-mail' \n                type='email'\n                error={errors.email}\n                {...register('email')}\n              />\n            </SimpleGrid>\n\n            <SimpleGrid \n              minChildWidth='240px'\n              spacing={['6', '8']}\n              w='100%'\n            >\n              <Input \n                name='password' \n                label='Senha' \n                type='password'\n                error={errors.password}\n                {...register('password')}\n              />\n              <Input \n                name='password_confirmation' \n                label='Confirmação da senha' \n                type='password'\n                error={errors.password_confirmation}\n                {...register('password_confirmation')}\n              />\n            </SimpleGrid>\n          </VStack>\n\n          <Flex mt='8' justify='flex-end'>\n            <HStack spacing='4'>\n              <Link href='/users' passHref>\n                <Button as='a' colorScheme='whiteAlpha'>Cancelar</Button>\n              </Link>\n              <Button \n                type='submit'\n                colorScheme='pink' \n                isLoading={isSubmitting}\n              >\n                Salvar\n              </Button>\n            </HStack>\n          </Flex>\n        </Box>\n      </Flex>\n    </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}