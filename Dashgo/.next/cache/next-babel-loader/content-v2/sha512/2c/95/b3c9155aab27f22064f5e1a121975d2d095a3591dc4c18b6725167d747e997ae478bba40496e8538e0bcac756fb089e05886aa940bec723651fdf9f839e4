{"ast":null,"code":"import _defineProperty from \"C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\Projeto 4 - Dashgo\\\\src\\\\components\\\\ActiveLink.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { cloneElement } from 'react';\nexport function ActiveLink(_ref) {\n  _s();\n\n  var children = _ref.children,\n      _ref$shouldMatchExact = _ref.shouldMatchExactHref,\n      shouldMatchExactHref = _ref$shouldMatchExact === void 0 ? false : _ref$shouldMatchExact,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"shouldMatchExactHref\"]);\n\n  var _useRouter = useRouter(),\n      asPath = _useRouter.asPath;\n\n  var isActive = false;\n\n  if (shouldMatchExactHref && (asPath === rest.href || asPath === rest.as)) {\n    isActive = true;\n  }\n\n  if (!shouldMatchExactHref && (asPath.startsWith(String(rest.href)) || asPath.startsWith(String(rest.as)))) {\n    isActive = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, rest), {}, {\n    children: /*#__PURE__*/cloneElement(children, {\n      color: isActive ? 'pink.400' : 'gray.50'\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ActiveLink, \"9pMG9Ra3x5O/yaZiUz6XxVJ+Rds=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveLink\");","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/src/components/ActiveLink.tsx"],"names":["Link","useRouter","cloneElement","ActiveLink","children","shouldMatchExactHref","rest","asPath","isActive","href","as","startsWith","String","color"],"mappings":";;;;;;;;;;;AAAA,OAAOA,IAAP,MAAgC,WAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAuBC,YAAvB,QAA2C,OAA3C;AAOA,OAAO,SAASC,UAAT,OAAwF;AAAA;;AAAA,MAAnEC,QAAmE,QAAnEA,QAAmE;AAAA,mCAAzDC,oBAAyD;AAAA,MAAzDA,oBAAyD,sCAAlC,KAAkC;AAAA,MAAxBC,IAAwB;;AAAA,mBAC1EL,SAAS,EADiE;AAAA,MACrFM,MADqF,cACrFA,MADqF;;AAG7F,MAAIC,QAAQ,GAAG,KAAf;;AAEA,MAAGH,oBAAoB,KAAKE,MAAM,KAAKD,IAAI,CAACG,IAAhB,IAAwBF,MAAM,KAAKD,IAAI,CAACI,EAA7C,CAAvB,EAAyE;AACvEF,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,MAAG,CAACH,oBAAD,KACAE,MAAM,CAACI,UAAP,CAAkBC,MAAM,CAACN,IAAI,CAACG,IAAN,CAAxB,KACAF,MAAM,CAACI,UAAP,CAAkBC,MAAM,CAACN,IAAI,CAACI,EAAN,CAAxB,CAFA,CAAH,EAEwC;AACtCF,IAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,sBACE,QAAC,IAAD,kCAAUF,IAAV;AAAA,2BACGJ,YAAY,CAACE,QAAD,EAAW;AACtBS,MAAAA,KAAK,EAAEL,QAAQ,GAAG,UAAH,GAAgB;AADT,KAAX;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAtBeL,U;UACKF,S;;;KADLE,U","sourcesContent":["import Link, { LinkProps } from 'next/link'\nimport { useRouter } from 'next/router';\nimport { ReactElement, cloneElement } from 'react'\n\ninterface ActiveLinkProps extends LinkProps {\n  children: ReactElement;\n  shouldMatchExactHref?: boolean;\n}\n\nexport function ActiveLink({children, shouldMatchExactHref = false, ...rest}: ActiveLinkProps) {\n  const { asPath } = useRouter()\n\n  let isActive = false\n\n  if(shouldMatchExactHref && (asPath === rest.href || asPath === rest.as)) {\n    isActive = true\n  }\n\n  if(!shouldMatchExactHref && \n    (asPath.startsWith(String(rest.href)) ||\n     asPath.startsWith(String(rest.as)))) {\n    isActive = true\n  }\n  \n  return (\n    <Link {...rest}>\n      {cloneElement(children, {\n        color: isActive ? 'pink.400' : 'gray.50'\n      })}\n    </Link>\n  )\n}"]},"metadata":{},"sourceType":"module"}