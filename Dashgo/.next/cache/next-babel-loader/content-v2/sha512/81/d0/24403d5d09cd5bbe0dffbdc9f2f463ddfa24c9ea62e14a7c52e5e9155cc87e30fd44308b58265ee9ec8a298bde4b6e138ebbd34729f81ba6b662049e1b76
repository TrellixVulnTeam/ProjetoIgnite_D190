{"ast":null,"code":"import _defineProperty from \"C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\DVBLIW\\\\Desktop\\\\Projeto Ignite\\\\Projeto 4 - Dashgo\\\\src\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Flex, Button, Stack, Text } from '@chakra-ui/react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Input } from '../components/Form/Input';\nvar signInFormSchema = yup.object().shape({\n  email: yup.string().required('E-mail obrigatório').email('E-mail inválido'),\n  password: yup.string().required('Senha obrigatória')\n});\nexport default function SignIn() {\n  _s();\n\n  var _useForm = useForm({\n    resolver: yupResolver(signInFormSchema)\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      _useForm$formState = _useForm.formState,\n      errors = _useForm$formState.errors,\n      isSubmitting = _useForm$formState.isSubmitting;\n\n  var handleSignIn = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 2000);\n              });\n\n            case 2:\n              console.log(values);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSignIn(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    w: \"100vw\",\n    h: \"100vh\",\n    align: \"center\",\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      as: \"form\",\n      w: \"100%\",\n      maxWidth: 360,\n      bg: \"gray.800\",\n      p: \"8\",\n      borderRadius: 8,\n      flexDir: \"column\",\n      onSubmit: handleSubmit(handleSignIn),\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(Input, _objectSpread({\n          name: \"email\",\n          type: \"email\",\n          label: \"E-mail\",\n          error: errors.email\n        }, register('email')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n          name: \"password\",\n          type: \"password\",\n          label: \"Senha\",\n          error: errors.password\n        }, register('password')), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        mt: \"6\",\n        colorScheme: \"pink\",\n        size: \"lg\",\n        isLoading: isSubmitting,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"denEv8l6qBl5VC+3iUzM3F9Wbsc=\", false, function () {\n  return [useForm];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/DVBLIW/Desktop/Projeto Ignite/Projeto 4 - Dashgo/src/pages/index.tsx"],"names":["Flex","Button","Stack","Text","useForm","yup","yupResolver","Input","signInFormSchema","object","shape","email","string","required","password","SignIn","resolver","register","handleSubmit","formState","errors","isSubmitting","handleSignIn","values","Promise","resolve","setTimeout","console","log"],"mappings":"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","sourcesContent":["import { Flex, Button, Stack, Text } from '@chakra-ui/react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport { Input } from '../components/Form/Input';\n\ntype SignInFormData = {\n  email: string;\n  password: string;\n}\n\nconst signInFormSchema = yup.object().shape({\n  email: yup.string().required('E-mail obrigatório').email('E-mail inválido'),\n  password: yup.string().required('Senha obrigatória')\n})\n\nexport default function SignIn() {\n  const { register, handleSubmit, formState: { errors, isSubmitting } } = useForm<SignInFormData>({\n    resolver: yupResolver(signInFormSchema)\n  })\n\n  const handleSignIn: SubmitHandler<SignInFormData> = async (values) => {\n    await new Promise(resolve => setTimeout(resolve, 2000))\n    \n    console.log(values)\n  }\n\n  return (\n    <Flex\n      w='100vw'\n      h='100vh'\n      align='center'\n      justify='center'\n    >\n      <Flex\n        as='form'\n        w='100%'\n        maxWidth={360}\n        bg='gray.800'\n        p='8'\n        borderRadius={8}\n        flexDir='column'\n        onSubmit={handleSubmit(handleSignIn)}\n      >\n        <Text fontSize=\"xl\"> Login </Text>\n        <Stack spacing='4'>\n          <Input \n            name='email' \n            type='email' \n            label='E-mail'\n            error={errors.email}\n            {...register('email')} \n          />\n\n          <Input \n            name='password' \n            type='password' \n            label='Senha'\n            error={errors.password}\n            {...register('password')} \n          />\n        </Stack>\n\n        <Button \n          type='submit' \n          mt='6' \n          colorScheme='pink' \n          size='lg'\n          isLoading={isSubmitting}\n        >\n          Entrar\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}